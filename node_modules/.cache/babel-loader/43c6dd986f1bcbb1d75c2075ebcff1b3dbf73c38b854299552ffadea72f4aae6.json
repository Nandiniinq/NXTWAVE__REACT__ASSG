{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prithvi\\\\Desktop\\\\react_asg\\\\list-creation-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"https://apis.ccbp.in/list-creation/lists\";\n\n// Function to fetch users data\nconst fetchUsers = async url => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nfunction App() {\n  _s();\n  const [data, setData] = useState(null); // State to store fetched data\n  const [loading, setLoading] = useState(true); // State to handle loading\n  const [error, setError] = useState(null); // State to handle errors\n  const [showList1, setShowList1] = useState(true); // State to control visibility of List 1\n  const [showList2, setShowList2] = useState(true); // State to control visibility of List 2\n\n  useEffect(() => {\n    // Fetch data when the component mounts\n    const loadData = async () => {\n      try {\n        const fetchedData = await fetchUsers(API);\n        setData(fetchedData); // Store data in state\n      } catch (err) {\n        setError(err); // Handle errors if any\n      } finally {\n        setLoading(false); // Set loading to false once the data is fetched\n      }\n    };\n    loadData(); // Call the async function\n  }, []); // Empty dependency array means this effect runs only once when the component mounts\n\n  // Handling loading and error states\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Splitting the data based on list_number\n  const list1 = data.lists.filter(item => item.list_number === 1);\n  const list2 = data.lists.filter(item => item.list_number === 2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"List Creation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showList1,\n            onChange: () => setShowList1(!showList1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"List 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), showList1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: list1.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showList2,\n            onChange: () => setShowList2(!showList2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"List 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), showList2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: list2.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Gw7fRv5+giPfyIIDHNnyzTIG7iE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API","fetchUsers","url","response","fetch","data","json","err","console","error","App","_s","setData","loading","setLoading","setError","showList1","setShowList1","showList2","setShowList2","loadData","fetchedData","children","fileName","_jsxFileName","lineNumber","columnNumber","message","list1","lists","filter","item","list_number","list2","className","type","checked","onChange","map","name","description","id","_c","$RefreshReg$"],"sources":["C:/Users/prithvi/Desktop/react_asg/list-creation-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst API = \"https://apis.ccbp.in/list-creation/lists\";\n\n// Function to fetch users data\nconst fetchUsers = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nfunction App() {\n  const [data, setData] = useState(null); // State to store fetched data\n  const [loading, setLoading] = useState(true); // State to handle loading\n  const [error, setError] = useState(null); // State to handle errors\n  const [showList1, setShowList1] = useState(true); // State to control visibility of List 1\n  const [showList2, setShowList2] = useState(true); // State to control visibility of List 2\n\n  useEffect(() => {\n    // Fetch data when the component mounts\n    const loadData = async () => {\n      try {\n        const fetchedData = await fetchUsers(API);\n        setData(fetchedData); // Store data in state\n      } catch (err) {\n        setError(err); // Handle errors if any\n      } finally {\n        setLoading(false); // Set loading to false once the data is fetched\n      }\n    };\n\n    loadData(); // Call the async function\n  }, []); // Empty dependency array means this effect runs only once when the component mounts\n\n  // Handling loading and error states\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  // Splitting the data based on list_number\n  const list1 = data.lists.filter((item) => item.list_number === 1);\n  const list2 = data.lists.filter((item) => item.list_number === 2);\n\n  return (\n    <div>\n      <h1 className=\"header\">List Creation</h1>\n\n      <div className=\"lists-container\">\n        {/* List 1 Section */}\n        <div className=\"list-container\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={showList1}\n              onChange={() => setShowList1(!showList1)}\n            />\n            <span>List 1</span>\n          </label>\n          {showList1 && (\n            <div className=\"list\">\n              <ul>\n                {list1.map((item) => (\n                  <li key={item.id}>\n                    <h3>{item.name}</h3>\n                    <p>{item.description}</p>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n\n        {/* List 2 Section */}\n        <div className=\"list-container\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={showList2}\n              onChange={() => setShowList2(!showList2)}\n            />\n            <span>List 2</span>\n          </label>\n          {showList2 && (\n            <div className=\"list\">\n              <ul>\n                {list2.map((item) => (\n                  <li key={item.id}>\n                    <h3>{item.name}</h3>\n                    <p>{item.description}</p>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}